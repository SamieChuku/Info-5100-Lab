/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Student;
import utility.DatabaseConnector;

/**
 *
 * @author samps
 */
public class ViewJPanel extends javax.swing.JPanel {
    
    private Student studentObject;
    private ArrayList <Student> Students;

    /**
     * Creates new form ViewJPanel
     */
    public ViewJPanel() {
        initComponents();
        populateTable();
       
    }
    public ViewJPanel(Student studentObject){
        initComponents();
        this.studentObject = studentObject;
        setAllFields();
    }
    
    public void setAllFields(){
    this.firstnameTextField.setText(studentObject.getFirstname());
    this.lastnameTextField.setText(studentObject.getLastname());
    this.genderComboBox.setSelectedItem(studentObject.getGender());
    //Convert age field from int to string
    this.ageTextField.setText (String.valueOf(studentObject.getAge()));
    this.emailaddressTextField.setText(studentObject.getEmailaddress());
    this.phonenumberTextField.setText(studentObject.getPhonenumber());
    this.hobbiesTextArea.setText(studentObject.getHobbies());
    //this.imgLabel.setIcon(studentObject.getPicture());
 
    }
    
    // get details from the database and populate it in StudentjTable
    public void populateTable(){
        //getting the data from database
     this.Students = DatabaseConnector.getStudents();
     
        //display the students in the jTable
     DefaultTableModel model = (DefaultTableModel) this.studentTable.getModel();
     model.setRowCount(0);
     for(Student s1: Students){
         Object [] row = new Object [8];
         row[0] = s1.getStudent_id();
         row[1] = s1.getFirstname();
         row[2] = s1.getLastname();
         row[3] = s1.getGender();
         row[4] = s1.getAge();
         row[5] = s1.getEmailaddress();
         row[6] = s1.getPhonenumber();
         row[7] = s1.getHobbies();
         model.addRow(row);
     }
    }
    public void enableAll(){
        this.firstnameTextField.setEnabled(true);
        this.lastnameTextField.setEnabled(true);
        this.genderComboBox.setEnabled(true);
        this.ageTextField.setEnabled(true);
        this.emailaddressTextField.setEnabled(true);
        this.phonenumberTextField.setEnabled(true);
        this.hobbiesTextArea.setEnabled(true);
     
    }
    
      public void disableAll(){
        this.firstnameTextField.setEnabled(false);
        this.lastnameTextField.setEnabled(false);
        this.genderComboBox.setEnabled(false);
        this.ageTextField.setEnabled(false);
        this.emailaddressTextField.setEnabled(false);
        this.phonenumberTextField.setEnabled(false);
        this.hobbiesTextArea.setEnabled(false);
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        firstnameLabel = new javax.swing.JLabel();
        firstnameTextField = new javax.swing.JTextField();
        lastnameLabel = new javax.swing.JLabel();
        lastnameTextField = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        genderComboBox = new javax.swing.JComboBox<>();
        ageLabel = new javax.swing.JLabel();
        ageTextField = new javax.swing.JTextField();
        phonenumberLabel = new javax.swing.JLabel();
        phonenumberTextField = new javax.swing.JTextField();
        emailaddressLabel = new javax.swing.JLabel();
        emailaddressTextField = new javax.swing.JTextField();
        hobbiesLabel = new javax.swing.JLabel();
        hobbisScrollPane = new javax.swing.JScrollPane();
        hobbiesTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        submitEditButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 51));
        setMaximumSize(new java.awt.Dimension(900, 600));
        setMinimumSize(new java.awt.Dimension(900, 600));
        setPreferredSize(new java.awt.Dimension(900, 600));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("Create User Profile");

        firstnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        firstnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        firstnameLabel.setText("First Name");

        firstnameTextField.setEnabled(false);

        lastnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lastnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        lastnameLabel.setText("Last Name");

        lastnameTextField.setEnabled(false);

        genderLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(255, 255, 255));
        genderLabel.setText("Gender");

        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Unspecified" }));
        genderComboBox.setSelectedIndex(-1);
        genderComboBox.setEnabled(false);

        ageLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ageLabel.setForeground(new java.awt.Color(255, 255, 255));
        ageLabel.setText("Age");

        ageTextField.setEnabled(false);

        phonenumberLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        phonenumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        phonenumberLabel.setText("Phone Number");

        phonenumberTextField.setEnabled(false);

        emailaddressLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        emailaddressLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailaddressLabel.setText("Email Address");

        emailaddressTextField.setEnabled(false);

        hobbiesLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hobbiesLabel.setForeground(new java.awt.Color(255, 255, 255));
        hobbiesLabel.setText("Hobbies");

        hobbiesTextArea.setColumns(20);
        hobbiesTextArea.setRows(5);
        hobbiesTextArea.setEnabled(false);
        hobbisScrollPane.setViewportView(hobbiesTextArea);

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "student_id", "First Name", "Last Name", "Gender", "Age", "Email Address", "Phone Number", "Hobbies"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.setPreferredSize(new java.awt.Dimension(600, 200));
        jScrollPane1.setViewportView(studentTable);

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        submitEditButton.setText("Submit");
        submitEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitEditButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(firstnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(phonenumberLabel)
                                    .addComponent(emailaddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(hobbiesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(121, 121, 121)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(genderComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ageTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(emailaddressTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lastnameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                        .addComponent(firstnameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                        .addComponent(hobbisScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(phonenumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(89, 89, 89)
                                        .addComponent(editButton)
                                        .addGap(52, 52, 52)
                                        .addComponent(deleteButton))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(submitEditButton)
                                        .addGap(50, 50, 50))))
                            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstnameLabel)
                            .addComponent(firstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastnameLabel)
                            .addComponent(lastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editButton)
                            .addComponent(deleteButton))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderLabel)
                    .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLabel)
                            .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phonenumberLabel)
                            .addComponent(phonenumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(submitEditButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailaddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailaddressLabel))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hobbiesLabel)
                    .addComponent(hobbisScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        //1. Which student to delete:Find the row the user has clicked on
        int selectedRowIndex = this.studentTable.getSelectedRow();
        //find the student at that index
        try{
            this.studentObject = this.Students.get(selectedRowIndex);
        
            //call the delete method from the Database Connector
            DatabaseConnector.deleteStudent(studentObject);
            System.out.println("User deleted successfully");
            
            //create a popup
            JOptionPane.showMessageDialog(this, "Record Deleted", "Success!", HEIGHT);
            
            //repopulate table
            populateTable ();
        } catch(Exception e){
            System.out.println("Unable to Delete");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        //1. Which student to delete:Find the row the user has clicked on
        int selectedRowIndex = this.studentTable.getSelectedRow();
        //find the student at that index
        try{
            this.studentObject = this.Students.get(selectedRowIndex);
            //set the values  in the text/combo areas.
            setAllFields();
            
            //make the fields enabled
            enableAll();
        }catch (Exception e){
    
        }
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void submitEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitEditButtonActionPerformed
        // TODO add your handling code here:
        //1. Update the values from the textboxes
        Student updatedStudent = new Student();
        updatedStudent.setFirstname(this.firstnameTextField.getText());
        updatedStudent.setLastname(this.lastnameTextField.getText());
        updatedStudent.setGender(this.genderComboBox.getSelectedItem().toString());
        updatedStudent.setAge(Integer.parseInt(this.ageTextField.getText()));
        updatedStudent.setEmailaddress(this.emailaddressTextField.getText());
        updatedStudent.setPhonenumber(this.phonenumberTextField.getText());
        updatedStudent.setHobbies(this.hobbiesTextArea.getText());
        
        //2. Call the update student method from the database connector
        
        try{
        DatabaseConnector.updateStudent(studentObject, updatedStudent);
        System.out.println("Record has been updated");
        JOptionPane.showMessageDialog(this, "Record Updated", "Success!", HEIGHT);
        
        // Repopulate the table
        populateTable();
        }catch (Exception e){
        
        }
        
    }//GEN-LAST:event_submitEditButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel emailaddressLabel;
    private javax.swing.JTextField emailaddressTextField;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JTextField firstnameTextField;
    private javax.swing.JComboBox<String> genderComboBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel hobbiesLabel;
    private javax.swing.JTextArea hobbiesTextArea;
    private javax.swing.JScrollPane hobbisScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JTextField lastnameTextField;
    private javax.swing.JLabel phonenumberLabel;
    private javax.swing.JTextField phonenumberTextField;
    private javax.swing.JTable studentTable;
    private javax.swing.JButton submitEditButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
